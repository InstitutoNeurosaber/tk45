/**
 * Configura√ß√£o espec√≠fica para o Netlify
 * Executa antes da compila√ß√£o para remover arquivos TypeScript problem√°ticos
 */

// Este arquivo √© carregado automaticamente pelo Netlify
module.exports = {
  onPreBuild: ({ utils }) => {
    // Registrar in√≠cio
    console.log('üöÄ Executando hook onPreBuild para remover arquivos TypeScript...');
    
    try {
      // Executa comandos shell para remover arquivos TypeScript
      const result = utils.run.command('rm -f netlify/functions/*.ts');
      console.log('‚úÖ Remo√ß√£o de arquivos TS conclu√≠da:', result);
      
      // Encontrar e remover todos os arquivos TypeScript em subdiret√≥rios
      const result2 = utils.run.command('find netlify/functions -name "*.ts" -type f -delete || true');
      console.log('‚úÖ Remo√ß√£o de arquivos TS em subdiret√≥rios conclu√≠da:', result2);
      
      // Listar arquivos restantes
      const files = utils.run.command('ls -la netlify/functions');
      console.log('üìÅ Arquivos restantes na pasta de fun√ß√µes:');
      console.log(files);
    } catch (error) {
      // Registrar erro, mas continuar o build
      console.error('‚ùå Erro ao remover arquivos TypeScript:', error);
      console.log('‚ö†Ô∏è Continuando o build mesmo com erro...');
    }
  }
}; 